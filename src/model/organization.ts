/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Subject interested in tracking people\'s presence inside its own places, in either an anonymous or authenticated way.
 */
export interface Organization { 
    /**
     * Unique identifier for an organization.
     */
    id: number;
    /**
     * Name of the organization.
     */
    name: string;
    /**
     * Small description of what the organization does.
     */
    description?: string;
    /**
     * Image/logo for the organization which gets shown on the application.
     */
    image?: string;
    /**
     * The street where the organization is located.
     */
    street: string;
    /**
     * The number in the street where the organization is located.
     */
    number: string;
    /**
     * The postcode where the organization is located.
     */
    postCode?: number;
    /**
     * The city where the organization is located.
     */
    city: string;
    /**
     * The country where the organization is located.
     */
    country: string;
    /**
     * URL or IP address of the LDAP server of the organization. If it\'s required a specific TCP port (different from LDAP\'s default) it must be specified. Needed only if trackingMethod is set to authenticated.
     */
    serverLDAP?: string;
    /**
     * When the organization was added to the system.
     */
    creationDate: Date;
    /**
     * When the organization parameters were last changed.
     */
    lastChangeDate?: Date;
    /**
     * Area subjected to movement tracking of people. It is a collection of (longitude, latitude) pairs consisting in a polygon. The string is expressed in JSON format.
     */
    trackingArea: string;
    /**
     * How an user who added to its favorites the organization can be tracked inside the organization\'s trackingArea and its places.
     */
    trackingMode: Organization.TrackingModeEnum;
}
export namespace Organization {
    export type TrackingModeEnum = 'authenticated' | 'anonymous';
    export const TrackingModeEnum = {
        Authenticated: 'authenticated' as TrackingModeEnum,
        Anonymous: 'anonymous' as TrackingModeEnum
    };
}


